{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "16519192067960548221"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for deployment."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Public Key for the Virtual Machine."
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "Environment (dev, test, prod)."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "[format('vm-sirtunnel-{0}', parameters('environment'))]",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B1s",
      "metadata": {
        "description": "Size for the Virtual Machine."
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "[format('vnet-sirtunnel-{0}', parameters('environment'))]",
      "metadata": {
        "description": "Name of the Virtual Network."
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "[format('snet-sirtunnel-{0}', parameters('environment'))]",
      "metadata": {
        "description": "Name of the Subnet."
      }
    },
    "dnsZoneName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing Azure DNS Zone (e.g., title.dev)."
      }
    },
    "dnsZoneResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group name where the existing Azure DNS Zone resides."
      }
    },
    "staticPipName": {
      "type": "string",
      "metadata": {
        "description": "Name of the existing Static Public IP Address resource."
      }
    },
    "staticPipResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "Resource Group name where the existing Static Public IP Address resides."
      }
    }
  },
  "variables": {
    "networkInterfaceName": "[format('nic-sirtunnel-{0}', parameters('environment'))]",
    "networkSecurityGroupName": "[format('nsg-sirtunnel-{0}', parameters('environment'))]",
    "osDiskName": "[format('osdisk-sirtunnel-{0}', parameters('environment'))]",
    "githubRepo": "YOUR_USERNAME/YOUR_REPO"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-11-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-11-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "SSH",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "22",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "HTTPS",
            "properties": {
              "priority": 1001,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "443",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2023-11-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('staticPipResourceGroupName')), 'Microsoft.Network/publicIPAddresses', parameters('staticPipName'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                  "keyData": "[parameters('adminPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "0001-com-ubuntu-server-jammy",
            "sku": "22_04-lts-gen2",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('osDiskName')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
            },
            "deleteOption": "Delete"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2024-03-01",
      "name": "[format('{0}/{1}', parameters('vmName'), 'install-sirtunnel-caddy')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[format('https://raw.githubusercontent.com/{0}/main/scripts/install.sh', variables('githubRepo'))]"
          ],
          "commandToExecute": "[format('bash install.sh {0} {1}', subscription().subscriptionId, parameters('dnsZoneResourceGroupName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "dnsRoleAssignment",
      "resourceGroup": "[parameters('dnsZoneResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalId": {
            "value": "[reference(resourceId('Microsoft.Compute/virtualMachines', parameters('vmName')), '2024-03-01', 'full').identity.principalId]"
          },
          "dnsZoneId": {
            "value": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('dnsZoneResourceGroupName')), 'Microsoft.Network/dnsZones', parameters('dnsZoneName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.33.93.31351",
              "templateHash": "4006448753401472966"
            }
          },
          "parameters": {
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Principal ID of the VM managed identity"
              }
            },
            "dnsZoneId": {
              "type": "string",
              "metadata": {
                "description": "DNS Zone resource ID"
              }
            }
          },
          "variables": {
            "dnsZoneContributorRoleId": "befefa01-2a29-4197-83a8-272ff33ce314"
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "name": "[guid(parameters('dnsZoneId'), parameters('principalId'), variables('dnsZoneContributorRoleId'))]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('dnsZoneContributorRoleId'))]",
                "principalId": "[parameters('principalId')]",
                "principalType": "ServicePrincipal"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', parameters('vmName'))]"
      ]
    }
  ],
  "outputs": {
    "publicIPAddress": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('staticPipResourceGroupName')), 'Microsoft.Network/publicIPAddresses', parameters('staticPipName')), '2023-11-01').ipAddress]"
    },
    "vmAdminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('staticPipResourceGroupName')), 'Microsoft.Network/publicIPAddresses', parameters('staticPipName')), '2023-11-01').ipAddress)]"
    },
    "sampleTunnelEndpoint": {
      "type": "string",
      "value": "[format('https://example.tun.{0}', parameters('dnsZoneName'))]"
    }
  }
}